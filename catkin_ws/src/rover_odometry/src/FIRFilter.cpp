#include "rover_odometry/FIRFilter.hpp"

#include <iostream>

namespace rover_odometry {
FIRFilter::FIRFilter() : filterCoefficients_(51), filterValues_(51)
{
    filterValues_.setZero();
    filterValues_(50) = 1.0;

    filterCoefficients_ << -0.00077162870397459800000000,
            -0.00069843917068102100000000, -0.00063577334060028900000000,
            -0.00053792747375146400000000, -0.00034776557195907100000000,
            0.00000000000000000035049453, 0.00057466642896678900000000,
            0.00144478076185715000000000, 0.00267305844527331000000000,
            0.00431130925914040000000000, 0.00639571175048909000000000,
            0.00894276652351504000000000, 0.01194622551961080000000000,
            0.01537524048723990000000000, 0.01917390239919580000000000,
            0.02326225906900120000000000, 0.02753880604806860000000000,
            0.03188435204670080000000000, 0.03616707080571130000000000,
            0.04024847251723130000000000, 0.04398996488645290000000000,
            0.04725963107366330000000000, 0.04993883208883870000000000,
            0.05192824624331450000000000, 0.05315298787949250000000000,
            0.05356650005440620000000000, 0.05315298787949250000000000,
            0.05192824624331450000000000, 0.04993883208883870000000000,
            0.04725963107366330000000000, 0.04398996488645290000000000,
            0.04024847251723130000000000, 0.03616707080571130000000000,
            0.03188435204670080000000000, 0.02753880604806860000000000,
            0.02326225906900120000000000, 0.01917390239919580000000000,
            0.01537524048723990000000000, 0.01194622551961080000000000,
            0.00894276652351504000000000, 0.00639571175048909000000000,
            0.00431130925914040000000000, 0.00267305844527331000000000,
            0.00144478076185715000000000, 0.00057466642896678900000000,
            0.00000000000000000035049453, -0.00034776557195907100000000,
            -0.00053792747375146400000000, -0.00063577334060028900000000,
            -0.00069843917068102100000000,
            -0.00077162870397459800000000;
    filterCoefficients_ = filterCoefficients_.transpose();
}

FIRFilter::~FIRFilter() {}

double FIRFilter::filterWheelAngularVelocity(const double& omega)
{
    long int n_rows = filterValues_.rows();

    for (size_t i = n_rows - 2; i > 0; --i) {
        filterValues_(i) = filterValues_(i - 1);
    }

    filterValues_(0) = omega;

    double filteredOmega = filterCoefficients_.dot(filterValues_);

    return filteredOmega;
}

}// namespace rover_odometry
